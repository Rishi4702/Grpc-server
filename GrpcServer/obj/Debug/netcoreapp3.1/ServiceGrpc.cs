// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/service.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

public static partial class GRPCservice
{
  static readonly string __ServiceName = "GRPCservice";

  static readonly grpc::Marshaller<global::RepeatStringRequest> __Marshaller_RepeatStringRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::RepeatStringRequest.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::RepeatStringReply> __Marshaller_RepeatStringReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::RepeatStringReply.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::UploadImageRequest> __Marshaller_UploadImageRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::UploadImageRequest.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::UploadImageReply> __Marshaller_UploadImageReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::UploadImageReply.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::DownloadImageResponse> __Marshaller_DownloadImageResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::DownloadImageResponse.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::send_data> __Marshaller_send_data = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::send_data.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::read_data> __Marshaller_read_data = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::read_data.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::NewCustomerRequest> __Marshaller_NewCustomerRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::NewCustomerRequest.Parser.ParseFrom);

  static readonly grpc::Method<global::RepeatStringRequest, global::RepeatStringReply> __Method_RepeatString = new grpc::Method<global::RepeatStringRequest, global::RepeatStringReply>(
      grpc::MethodType.Unary,
      __ServiceName,
      "RepeatString",
      __Marshaller_RepeatStringRequest,
      __Marshaller_RepeatStringReply);

  static readonly grpc::Method<global::UploadImageRequest, global::UploadImageReply> __Method_UploadImage = new grpc::Method<global::UploadImageRequest, global::UploadImageReply>(
      grpc::MethodType.Unary,
      __ServiceName,
      "UploadImage",
      __Marshaller_UploadImageRequest,
      __Marshaller_UploadImageReply);

  static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::DownloadImageResponse> __Method_DownloadImage = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::DownloadImageResponse>(
      grpc::MethodType.ServerStreaming,
      __ServiceName,
      "DownloadImage",
      __Marshaller_google_protobuf_Empty,
      __Marshaller_DownloadImageResponse);

  static readonly grpc::Method<global::send_data, global::read_data> __Method_send = new grpc::Method<global::send_data, global::read_data>(
      grpc::MethodType.Unary,
      __ServiceName,
      "send",
      __Marshaller_send_data,
      __Marshaller_read_data);

  static readonly grpc::Method<global::NewCustomerRequest, global::send_data> __Method_first = new grpc::Method<global::NewCustomerRequest, global::send_data>(
      grpc::MethodType.ServerStreaming,
      __ServiceName,
      "first",
      __Marshaller_NewCustomerRequest,
      __Marshaller_send_data);

  /// <summary>Service descriptor</summary>
  public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
  {
    get { return global::ServiceReflection.Descriptor.Services[0]; }
  }

  /// <summary>Base class for server-side implementations of GRPCservice</summary>
  [grpc::BindServiceMethod(typeof(GRPCservice), "BindService")]
  public abstract partial class GRPCserviceBase
  {
    public virtual global::System.Threading.Tasks.Task<global::RepeatStringReply> RepeatString(global::RepeatStringRequest request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task<global::UploadImageReply> UploadImage(global::UploadImageRequest request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task DownloadImage(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::IServerStreamWriter<global::DownloadImageResponse> responseStream, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task<global::read_data> send(global::send_data request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task first(global::NewCustomerRequest request, grpc::IServerStreamWriter<global::send_data> responseStream, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

  }

  /// <summary>Creates service definition that can be registered with a server</summary>
  /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
  public static grpc::ServerServiceDefinition BindService(GRPCserviceBase serviceImpl)
  {
    return grpc::ServerServiceDefinition.CreateBuilder()
        .AddMethod(__Method_RepeatString, serviceImpl.RepeatString)
        .AddMethod(__Method_UploadImage, serviceImpl.UploadImage)
        .AddMethod(__Method_DownloadImage, serviceImpl.DownloadImage)
        .AddMethod(__Method_send, serviceImpl.send)
        .AddMethod(__Method_first, serviceImpl.first).Build();
  }

  /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
  /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
  /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
  /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
  public static void BindService(grpc::ServiceBinderBase serviceBinder, GRPCserviceBase serviceImpl)
  {
    serviceBinder.AddMethod(__Method_RepeatString, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::RepeatStringRequest, global::RepeatStringReply>(serviceImpl.RepeatString));
    serviceBinder.AddMethod(__Method_UploadImage, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::UploadImageRequest, global::UploadImageReply>(serviceImpl.UploadImage));
    serviceBinder.AddMethod(__Method_DownloadImage, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::Google.Protobuf.WellKnownTypes.Empty, global::DownloadImageResponse>(serviceImpl.DownloadImage));
    serviceBinder.AddMethod(__Method_send, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::send_data, global::read_data>(serviceImpl.send));
    serviceBinder.AddMethod(__Method_first, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::NewCustomerRequest, global::send_data>(serviceImpl.first));
  }

}
#endregion
